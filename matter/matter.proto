syntax = "proto3";

package matter;
option go_package=".;matter";

import "patch/go.proto";

service Matter { 
	rpc Login(LoginRequest) returns (LoginResponse) {}

    rpc TeamsForUser(TeamsForUserRequest) returns (TeamsForUserResponse) {}
	rpc ChannelsForUser(ChannelsForUserRequest) returns (ChannelsForUserResponse) {}

	rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse) {}	

	rpc Listen(stream ListenRequest) returns (stream ListenEvent) {}
}

message Channel {
    string id = 1 [(go.field) = {name: "ID"}];
    string name = 2;
}

message Team {
    string id = 1 [(go.field) = {name: "ID"}];
    string name = 2;    
}

message Post {
    string id = 1;
    string message = 2;
}

message LoginRequest {
	string kid = 1 [(go.field) = {name: "KID"}];
}
message LoginResponse {}

message CreateChannelRequest {
    string name = 1;
    string teamId = 2 [(go.field) = {name: "TeamID"}];


}
message CreateChannelResponse {
    Channel channel = 1;
}

message TeamsForUserRequest {
	string userId = 1 [(go.field) = {name: "UserID"}];
}
message TeamsForUserResponse {
	repeated Team teams = 1;
}

message ChannelsForUserRequest {
	string userId = 1 [(go.field) = {name: "UserID"}];
	string teamId = 2 [(go.field) = {name: "TeamID"}];
}
message ChannelsForUserResponse {
	repeated Channel channels = 1;
}

message ListenRequest {
}

message ListenEvent {
	Post post = 1;
}